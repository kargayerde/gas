{"version":3,"sources":["getGas.js","assets/img/cross.svg","assets/img/plus.svg","assets/img/refresh.svg","assets/asdf.wav","AlarmBox.js","App.js","index.js"],"names":["getGas","setGasData","gasData","parseTime","messageCount","console","log","socket","WebSocket","onopen","e","onmessage","prices","Object","values","JSON","parse","data","map","value","index","wei","toFixed","onclose","wasClean","code","onerror","message","STATUS","AlarmBox","useState","alarmInput","setAlarmInput","alarms","setAlarms","sound","Audio","soundFile","handleAddAlarm","find","item","status","sort","a","b","useEffect","Number","nextAlarms","play","checkAlarm","getAlarmClass","className","maxlength","onChange","target","onKeyDown","key","isNaN","preventDefault","filterNaNfromInput","onWheel","input","deltaY","Math","max","placeholder","onClick","src","plus","newAlarms","handleResetAlarm","refresh","splice","handleClearAlarm","cross","api","etherscanApi","init","date","Date","toUTCString","replace","App","ethPrice","setEthPrice","txGasCost","setTxGasCost","getEthPrice","stats","ethprice","price","result","ethusd","setInterval","txCost","close","undefined","htmlFor","id","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.047a9cab.chunk.js","sourcesContent":["const convWeiToGwei = (wei) => wei / 10 ** 9;\r\n\r\nconst getGas = ({ setGasData, gasData, parseTime }) => {\r\n\tlet messageCount = 0;\r\n\r\n\tconsole.log(`opening websocket`);\r\n\r\n\tconst socket = new WebSocket(\"wss://gasgas.io/prices\");\r\n\r\n\tsocket.onopen = (e) => {\r\n\t\tconsole.log(\"websocket connected\");\r\n\t\tsetGasData({ ...gasData, socket: socket });\r\n\t};\r\n\r\n\tsocket.onmessage = (e) => {\r\n\t\tmessageCount++;\r\n\t\tlet prices = Object.values(JSON.parse(e.data).data).map((value, index) => {\r\n\t\t\treturn index === 4 ? parseTime(value) : convWeiToGwei(value).toFixed(1);\r\n\t\t});\r\n\t\tsetGasData({ socket: socket, prices: [...prices, messageCount] });\r\n\t};\r\n\r\n\tsocket.onclose = (e) => {\r\n\t\tif (e.wasClean) {\r\n\t\t\tconsole.log(`${e.code}: Connection closed cleanly`);\r\n\t\t} else {\r\n\t\t\tconsole.log(`${e.code}: Connection rekt`);\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.onerror = (e) => {\r\n\t\tconsole.log({ onerror: e.message });\r\n\t};\r\n};\r\n\r\nexport default getGas;\r\n","export default __webpack_public_path__ + \"static/media/cross.7ac58f49.svg\";","export default __webpack_public_path__ + \"static/media/plus.0737ce86.svg\";","export default __webpack_public_path__ + \"static/media/refresh.755ed584.svg\";","export default __webpack_public_path__ + \"static/media/asdf.b49a92e1.wav\";","import { useState, useEffect } from \"react\";\r\nimport { cross, refresh, plus } from \"./assets/img\";\r\n\r\nimport soundFile from \"./assets/asdf.wav\";\r\n\r\nimport \"./AlarmBox.css\";\r\n\r\nconst STATUS = {\r\n\tSET: \"set\",\r\n\tRINGING: \"ringing\",\r\n\tSNOOZED: \"snoozed\",\r\n};\r\n\r\nexport const AlarmBox = ({ gasData }) => {\r\n\tconst [alarmInput, setAlarmInput] = useState();\r\n\tconst [alarms, setAlarms] = useState([]);\r\n\r\n\tlet sound = new Audio(soundFile);\r\n\r\n\tconst filterNaNfromInput = (e) => {\r\n\t\tconst allowedKeys = [\r\n\t\t\t\"Backspace\",\r\n\t\t\t\"Delete\",\r\n\t\t\t\"Home\",\r\n\t\t\t\"End\",\r\n\t\t\t\"ArrowUp\",\r\n\t\t\t\"ArrowDown\",\r\n\t\t\t\"ArrowLeft\",\r\n\t\t\t\"ArrowRight\",\r\n\t\t];\r\n\r\n\t\tif (!allowedKeys.find((item) => item === e.key) && isNaN(e.key)) e.preventDefault();\r\n\t};\r\n\r\n\tconst handleAlarmKeyDown = (e) => {\r\n\t\tif (e.key === \"Enter\") handleAddAlarm();\r\n\t\tfilterNaNfromInput(e);\r\n\t};\r\n\r\n\tconst handleAlarmWheel = (e) => {\r\n\t\tlet input = isNaN(alarmInput) ? 0 : alarmInput;\r\n\t\tinput = Number(input) + e.deltaY / -50;\r\n\t\tsetAlarmInput(Math.max(input, 0));\r\n\t};\r\n\r\n\tconst checkAlarm = (alarms) => {\r\n\t\tif (!gasData) return;\r\n\r\n\t\talarms.find((item, index) => {\r\n\t\t\tif (!(Number(item.value) >= gasData.prices[2])) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif (alarms[index].status !== STATUS.RINGING) {\r\n\t\t\t\t\tlet nextAlarms = [...alarms];\r\n\t\t\t\t\tnextAlarms[index].status = STATUS.RINGING;\r\n\r\n\t\t\t\t\tsetAlarms(nextAlarms);\r\n\t\t\t\t\tsound.play();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddAlarm = () => {\r\n\t\tif (alarmInput <= 9999 && !alarms.find((item) => item.value === alarmInput)) {\r\n\t\t\tlet newAlarm = { value: alarmInput, status: STATUS.SET };\r\n\t\t\tsetAlarms([newAlarm, ...alarms].sort((a, b) => b.value - a.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClearAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms.splice(index, 1);\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tconst handleResetAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms[index].status = STATUS.SET;\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tcheckAlarm(alarms);\r\n\t}, [gasData]);\r\n\r\n\tconst getAlarmClass = (index) => {\r\n\t\treturn alarms[index].status === STATUS.RINGING ? \"alert\" : \"\";\r\n\t};\r\n\r\n\tconst displayAlarms = () => {\r\n\t\treturn alarms.map((item, index) => (\r\n\t\t\t<div key={index} className={`alarm-box alarm-${index + 1} ${getAlarmClass(index)}`}>\r\n\t\t\t\t<div className=\"alarm-box-text-box\">\r\n\t\t\t\t\t<span>‚è∞</span>\r\n\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t<span>gwei</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"small-button-box\">\r\n\t\t\t\t\t{item.status === STATUS.RINGING ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"alarm-clear-button small-button\"\r\n\t\t\t\t\t\t\tonClick={() => handleResetAlarm(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={refresh} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"alarm-reset-button small-button\"\r\n\t\t\t\t\t\tonClick={() => handleClearAlarm(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={cross} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"alarm-box-container\">\r\n\t\t\t<div className=\"add-alarm-container\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"add-alarm-input\"\r\n\t\t\t\t\t// type=\"number\"\r\n\t\t\t\t\t// min=\"1\"\r\n\t\t\t\t\t// max=\"9999\"\r\n\t\t\t\t\t// autofocus=\"true\"\r\n\t\t\t\t\tmaxlength=\"4\"\r\n\t\t\t\t\tonChange={(e) => setAlarmInput(e.target.value)}\r\n\t\t\t\t\tonKeyDown={handleAlarmKeyDown}\r\n\t\t\t\t\tonWheel={handleAlarmWheel}\r\n\t\t\t\t\tvalue={alarmInput === 0 ? \"\" : alarmInput}\r\n\t\t\t\t\tplaceholder=\"alarm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"add-alarm-button\" placeholder=\"alarm\" onClick={handleAddAlarm}>\r\n\t\t\t\t\t<img src={plus} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{displayAlarms()}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport getGas from \"./getGas\";\nimport etherscanApi from \"etherscan-api\";\n\nimport { AlarmBox } from \"./AlarmBox\";\n\nimport \"./App.css\";\n\nconst api = etherscanApi.init(\"\");\n\nconst parseTime = (date) => new Date(date).toUTCString().replace(\"GMT\", \"UTC\");\n\nfunction App() {\n\tconst [gasData, setGasData] = useState({ prices: [], socket: null });\n\tconst [ethPrice, setEthPrice] = useState();\n\tconst [txGasCost, setTxGasCost] = useState(21000);\n\n\tconst getEthPrice = async () => {\n\t\tlet price = await api.stats.ethprice();\n\t\tsetEthPrice(price.result.ethusd);\n\t};\n\n\tuseEffect(() => {\n\t\tgetGas({ setGasData, gasData, parseTime });\n\t}, []);\n\n\tconst ethPriceOracle = () => {\n\t\tgetEthPrice();\n\t\tsetInterval(async () => {\n\t\t\tawait getEthPrice();\n\t\t}, 15000);\n\t};\n\n\tuseEffect(() => ethPriceOracle(), []);\n\n\tconst gasStartStop = () => {\n\t\tif (gasData.socket) {\n\t\t\tgasData.socket.close();\n\t\t\tconsole.log(\"killed connection\");\n\t\t\tsetGasData({ ...gasData, socket: undefined });\n\t\t} else {\n\t\t\tconsole.log(\"reconnecting...\");\n\t\t\tgetGas({ setGasData, gasData, parseTime });\n\t\t}\n\t};\n\n\tconst handleTxTypeInput = (event) => {\n\t\tsetTxGasCost(event.target.value);\n\t};\n\n\tconst renderPriceBoxes = () => {\n\t\treturn [\"rapid\", \"fast\", \"standard\", \"slow\"].map((item, index) => {\n\t\t\tlet txCost = ((ethPrice * gasData.prices[index] * txGasCost) / 10 ** 9).toFixed(2);\n\t\t\treturn (\n\t\t\t\t<div className={`price-box ${item}`}>\n\t\t\t\t\t{item}: <div className=\"price\">{gasData.prices[index]}</div>\n\t\t\t\t\t<span className=\"tx-cost\">(${txCost})</span>\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"app\">\n\t\t\t<div className=\"gas-widget\">\n\t\t\t\t<div className=\"gas-frame-container\">\n\t\t\t\t\t<div className=\"gas-frame\">\n\t\t\t\t\t\t{renderPriceBoxes()}\n\t\t\t\t\t\t<div className=\"timestamp\">\n\t\t\t\t\t\t\t<span>last update:</span>\n\t\t\t\t\t\t\t<span>{gasData.prices[4]}</span>\n\t\t\t\t\t\t\t<span> (update count: {gasData.prices[5]})</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<button className=\"kill-button\" onClick={() => gasStartStop()}>\n\t\t\t\t\t\t\t{gasData.socket === null ? \"\" : !gasData.socket ? \"Reconnect\" : \"KILL\"}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<div className=\"eth-price-container\">\n\t\t\t\t\t\t\tETH: ${ethPrice ? ethPrice : \"fetching\"}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"tx-select\">\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<label htmlFor=\"gasCostInput\">tx type: </label>\n\t\t\t\t\t\t\t\t<select id=\"gasCostInput\" onChange={handleTxTypeInput}>\n\t\t\t\t\t\t\t\t\t<option value={21000}>send ETH</option>\n\t\t\t\t\t\t\t\t\t<option value={65000}>send ERC20</option>\n\t\t\t\t\t\t\t\t\t<option value={175000}>LP</option>\n\t\t\t\t\t\t\t\t\t<option value={200000}>SWAP</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<AlarmBox gasData={gasData} />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}