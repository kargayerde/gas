{"version":3,"sources":["getGas.js","assets/img/cross.svg","assets/img/plus.svg","assets/img/refresh.svg","assets/asdf.wav","AlarmBox.js","App.js","index.js"],"names":["getGas","setGasData","gasData","parseTime","setGasStats","config","messageCount","autoRetry","rektFlag","console","log","socket","WebSocket","onopen","e","onmessage","prices","Object","values","JSON","parse","data","map","value","index","wei","toFixed","prevGasStats","sums","sampleSize","slice","item","Number","history","concat","calcAverages","onclose","wasClean","code","setTimeout","onerror","STATUS","AlarmBox","useState","alarmInput","setAlarmInput","alarms","setAlarms","sound","Audio","soundFile","handleAddAlarm","find","status","sort","a","b","useEffect","nextAlarms","play","checkAlarm","getAlarmClass","className","maxLength","onChange","target","onKeyDown","key","isNaN","preventDefault","filterNaNfromInput","onWheel","input","deltaY","Math","max","placeholder","onClick","src","plus","newAlarms","handleResetAlarm","refresh","splice","handleClearAlarm","cross","api","etherscanApi","init","date","Date","toUTCString","replace","App","gasStats","ethPrice","setEthPrice","txGasCost","setTxGasCost","showGraph","setConfig","getEthPrice","stats","ethprice","price","result","ethusd","setInterval","gasStartStop","close","undefined","txCost","type","id","checked","pre","htmlFor","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14df27b1.chunk.js","sourcesContent":["const convWeiToGwei = (wei) => wei / 10 ** 9;\r\n\r\nconst calcAverages = ({ setGasStats, prices }) => {\r\n\tsetGasStats((prevGasStats) => ({\r\n\t\tsums:\r\n\t\t\tprevGasStats.sampleSize === 0\r\n\t\t\t\t? prices.slice(0, 4)\r\n\t\t\t\t: prevGasStats.sums.map((item, index) => Number(item) + Number(prices[index])),\r\n\t\tsampleSize: prevGasStats.sampleSize + 1,\r\n\t\thistory: [...prevGasStats.history].concat([prices.slice(0, 4)]),\r\n\t}));\r\n};\r\n\r\nconst getGas = ({ setGasData, gasData, parseTime, setGasStats, config }) => {\r\n\tlet messageCount = 0;\r\n\tlet autoRetry = config.autoRetry;\r\n\r\n\tsetGasData({ ...gasData, rektFlag: \"neutral\" });\r\n\r\n\tconsole.log(`opening websocket`);\r\n\r\n\tconst socket = new WebSocket(\"wss://gasgas.io/prices\");\r\n\r\n\tsocket.onopen = (e) => {\r\n\t\tconsole.log(\"websocket connected\");\r\n\t\tsetGasData({ ...gasData, socket: socket, rektFlag: false });\r\n\t};\r\n\r\n\tsocket.onmessage = (e) => {\r\n\t\tmessageCount++;\r\n\t\tlet prices = Object.values(JSON.parse(e.data).data).map((value, index) => {\r\n\t\t\treturn index === 4 ? parseTime(value) : convWeiToGwei(value).toFixed(1);\r\n\t\t});\r\n\t\tsetGasData({ socket: socket, prices: [...prices, messageCount] });\r\n\t\tcalcAverages({ setGasStats, prices });\r\n\t};\r\n\r\n\tsocket.onclose = (e) => {\r\n\t\tif (e.wasClean) {\r\n\t\t\tconsole.log(`${e.code}: Connection closed cleanly`);\r\n\t\t} else {\r\n\t\t\tconsole.log(`${e.code}: Connection rekt`);\r\n\t\t\tsetGasData({\r\n\t\t\t\t...gasData,\r\n\t\t\t\tprices: [\"R\", \"E\", \"K\", \"T\", \"gasgas.io api rekt\", \"retry\"],\r\n\t\t\t\trektFlag: true,\r\n\t\t\t});\r\n\t\t\tif (autoRetry)\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, config });\r\n\t\t\t\t\tconsole.log(`getting gas`);\r\n\t\t\t\t}, 15000);\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.onerror = (e) => {\r\n\t\tconsole.log({ onerror: e });\r\n\t};\r\n};\r\n\r\nexport default getGas;\r\n","export default __webpack_public_path__ + \"static/media/cross.7ac58f49.svg\";","export default __webpack_public_path__ + \"static/media/plus.0737ce86.svg\";","export default __webpack_public_path__ + \"static/media/refresh.755ed584.svg\";","export default __webpack_public_path__ + \"static/media/asdf.b49a92e1.wav\";","import { useState, useEffect } from \"react\";\r\nimport { cross, refresh, plus } from \"./assets/img\";\r\n\r\nimport soundFile from \"./assets/asdf.wav\";\r\n\r\nimport \"./AlarmBox.css\";\r\n\r\nconst STATUS = {\r\n\tSET: \"set\",\r\n\tRINGING: \"ringing\",\r\n\tSNOOZED: \"snoozed\",\r\n};\r\n\r\nexport const AlarmBox = ({ gasData }) => {\r\n\tconst [alarmInput, setAlarmInput] = useState();\r\n\tconst [alarms, setAlarms] = useState([]);\r\n\r\n\tlet sound = new Audio(soundFile);\r\n\r\n\tconst filterNaNfromInput = (e) => {\r\n\t\tconst allowedKeys = [\r\n\t\t\t\"Backspace\",\r\n\t\t\t\"Delete\",\r\n\t\t\t\"Home\",\r\n\t\t\t\"End\",\r\n\t\t\t\"ArrowUp\",\r\n\t\t\t\"ArrowDown\",\r\n\t\t\t\"ArrowLeft\",\r\n\t\t\t\"ArrowRight\",\r\n\t\t];\r\n\r\n\t\tif (!allowedKeys.find((item) => item === e.key) && isNaN(e.key)) e.preventDefault();\r\n\t};\r\n\r\n\tconst handleAlarmKeyDown = (e) => {\r\n\t\tif (e.key === \"Enter\") handleAddAlarm();\r\n\t\tfilterNaNfromInput(e);\r\n\t};\r\n\r\n\tconst handleAlarmWheel = (e) => {\r\n\t\tlet input = isNaN(alarmInput) ? 0 : alarmInput;\r\n\t\tinput = Number(input) + e.deltaY / -50;\r\n\t\tsetAlarmInput(Math.max(input, 0));\r\n\t};\r\n\r\n\tconst checkAlarm = (alarms) => {\r\n\t\tif (!gasData) return;\r\n\r\n\t\talarms.find((item, index) => {\r\n\t\t\tif (!(Number(item.value) >= gasData.prices[2])) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif (alarms[index].status !== STATUS.RINGING) {\r\n\t\t\t\t\tlet nextAlarms = [...alarms];\r\n\t\t\t\t\tnextAlarms[index].status = STATUS.RINGING;\r\n\r\n\t\t\t\t\tsetAlarms(nextAlarms);\r\n\t\t\t\t\tsound.play();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddAlarm = () => {\r\n\t\tif (alarmInput <= 9999 && alarmInput > 0 && !alarms.find((item) => item.value === alarmInput)) {\r\n\t\t\tlet newAlarm = { value: alarmInput, status: STATUS.SET };\r\n\t\t\tsetAlarms([newAlarm, ...alarms].sort((a, b) => b.value - a.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClearAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms.splice(index, 1);\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tconst handleResetAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms[index].status = STATUS.SET;\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tcheckAlarm(alarms);\r\n\t}, [gasData]);\r\n\r\n\tconst getAlarmClass = (index) => {\r\n\t\treturn alarms[index].status === STATUS.RINGING ? \"alert\" : \"\";\r\n\t};\r\n\r\n\tconst displayAlarms = () => {\r\n\t\treturn alarms.map((item, index) => (\r\n\t\t\t<div key={index} className={`alarm-box alarm-${index + 1} ${getAlarmClass(index)}`}>\r\n\t\t\t\t<div className=\"alarm-box-text-box\">\r\n\t\t\t\t\t<span>⏰</span>\r\n\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t<span>gwei</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"small-button-box\">\r\n\t\t\t\t\t{item.status === STATUS.RINGING ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"alarm-clear-button small-button\"\r\n\t\t\t\t\t\t\tonClick={() => handleResetAlarm(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={refresh} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"alarm-reset-button small-button\"\r\n\t\t\t\t\t\tonClick={() => handleClearAlarm(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={cross} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"alarm-box-container\">\r\n\t\t\t<div className=\"add-alarm-container\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"add-alarm-input\"\r\n\t\t\t\t\t// type=\"number\"\r\n\t\t\t\t\t// min=\"1\"\r\n\t\t\t\t\t// max=\"9999\"\r\n\t\t\t\t\t// autofocus=\"true\"\r\n\t\t\t\t\tmaxLength=\"4\"\r\n\t\t\t\t\tonChange={(e) => setAlarmInput(e.target.value)}\r\n\t\t\t\t\tonKeyDown={handleAlarmKeyDown}\r\n\t\t\t\t\tonWheel={handleAlarmWheel}\r\n\t\t\t\t\tvalue={alarmInput === 0 ? \"\" : alarmInput}\r\n\t\t\t\t\tplaceholder=\"alarm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"add-alarm-button\" placeholder=\"alarm\" onClick={handleAddAlarm}>\r\n\t\t\t\t\t<img src={plus} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{displayAlarms()}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import { useState, useEffect } from \"react\";\r\nimport getGas from \"./getGas\";\r\nimport etherscanApi from \"etherscan-api\";\r\n\r\nimport { AlarmBox } from \"./AlarmBox\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst api = etherscanApi.init(\"\");\r\n\r\nconst parseTime = (date) => new Date(date).toUTCString().replace(\"GMT\", \"UTC\");\r\n\r\nfunction App() {\r\n\tconst [gasData, setGasData] = useState({ prices: [], socket: null, rektFlag: false });\r\n\tconst [gasStats, setGasStats] = useState({ sums: [], sampleSize: 0, history: [] });\r\n\tconst [ethPrice, setEthPrice] = useState();\r\n\tconst [txGasCost, setTxGasCost] = useState(21000);\r\n\tconst [config, setConfig] = useState({ autoRetry: false, showGraph: false });\r\n\r\n\tconst getEthPrice = async () => {\r\n\t\tlet price = await api.stats.ethprice();\r\n\t\tsetEthPrice(price.result.ethusd);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, config });\r\n\t}, []);\r\n\r\n\tconst ethPriceOracle = () => {\r\n\t\tgetEthPrice();\r\n\t\tsetInterval(async () => {\r\n\t\t\tawait getEthPrice();\r\n\t\t}, 15000);\r\n\t};\r\n\r\n\tuseEffect(() => ethPriceOracle(), []);\r\n\r\n\tconst gasStartStop = () => {\r\n\t\tif (gasData.socket) {\r\n\t\t\tgasData.socket.close();\r\n\t\t\tconsole.log(\"killed connection\");\r\n\t\t\tsetGasData({ ...gasData, socket: undefined });\r\n\t\t} else {\r\n\t\t\tconsole.log(\"reconnecting...\");\r\n\t\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, gasStats, config });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTxTypeInput = (event) => {\r\n\t\tsetTxGasCost(event.target.value);\r\n\t};\r\n\r\n\tconst renderPriceBoxes = () => {\r\n\t\treturn [\"rapid\", \"fast\", \"standard\", \"slow\"].map((item, index) => {\r\n\t\t\tlet txCost = ((ethPrice * gasData.prices[index] * txGasCost) / 10 ** 9).toFixed(2);\r\n\t\t\treturn (\r\n\t\t\t\t<div className={`price-box ${item}`}>\r\n\t\t\t\t\t{item}:<div className=\"price\">{gasData.prices[index]}</div>\r\n\t\t\t\t\t{isNaN(txCost) ? false : <span className=\"tx-cost\">(${txCost})</span>}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<div className=\"gas-widget\">\r\n\t\t\t\t<div className=\"gas-frame-container\">\r\n\t\t\t\t\t<div className=\"gas-frame\">\r\n\t\t\t\t\t\t{renderPriceBoxes()}\r\n\t\t\t\t\t\t<div className=\"timestamp\">\r\n\t\t\t\t\t\t\t<span>last update:</span>\r\n\t\t\t\t\t\t\t<span>{gasData.prices[4]}</span>\r\n\t\t\t\t\t\t\t<span> (update count: {gasData.prices[5]})</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"eth-price-container\">\r\n\t\t\t\t\t\t\tETH: {ethPrice ? \"$\" + ethPrice : \"disable adblock\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"kill-button-container\">\r\n\t\t\t\t\t\t\t<button className=\"kill-button\" onClick={() => gasStartStop()}>\r\n\t\t\t\t\t\t\t\t{gasData.rektFlag === \"neutral\"\r\n\t\t\t\t\t\t\t\t\t? \"Connecting...\"\r\n\t\t\t\t\t\t\t\t\t: gasData.socket\r\n\t\t\t\t\t\t\t\t\t? \"KILL\"\r\n\t\t\t\t\t\t\t\t\t: gasData.rektFlag\r\n\t\t\t\t\t\t\t\t\t? \"Retry\"\r\n\t\t\t\t\t\t\t\t\t: \"Connect\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{gasData.rektFlag === true ? (\r\n\t\t\t\t\t\t\t\t<span className=\"autoconnect-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"autoconnect\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={config.autoRetry}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={(e) =>{\r\n\t\t\t\t\t\t\t\t\t\t// \tconsole.log(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t// \tsetConfig({ ...config, autoRetry: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => setConfig((pre) => {\r\n\t\t\t\t\t\t\t\t\t\t\tif (!pre.autoRetry) gasStartStop();\r\n\t\t\t\t\t\t\t\t\t\t\treturn {...pre, autoRetry: !pre.autoRetry};\r\n\t\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<label> auto?</label>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tx-select\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"gasCostInput\">tx type: </label>\r\n\t\t\t\t\t\t\t<select id=\"gasCostInput\" onChange={handleTxTypeInput}>\r\n\t\t\t\t\t\t\t\t<option value={21000}>send ETH</option>\r\n\t\t\t\t\t\t\t\t<option value={65000}>send ERC20</option>\r\n\t\t\t\t\t\t\t\t<option value={175000}>LP</option>\r\n\t\t\t\t\t\t\t\t<option value={200000}>SWAP</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AlarmBox gasData={gasData} />\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}