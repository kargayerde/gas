{"version":3,"sources":["getGas.js","assets/img/cross.svg","assets/img/plus.svg","assets/img/refresh.svg","assets/asdf.wav","AlarmBox.js","Graph.js","auth.js","App.js","index.js"],"names":["getGas","setGasData","gasData","parseTime","setGasStats","config","messageCount","rektFlag","console","log","socket","WebSocket","onopen","e","onmessage","prices","Object","values","JSON","parse","data","map","value","index","wei","toFixed","prevGasStats","sums","sampleSize","slice","item","Number","history","concat","calcAverages","onclose","wasClean","code","autoRetry","auto","setTimeout","onerror","STATUS","AlarmBox","useState","alarmInput","setAlarmInput","alarms","setAlarms","sound","Audio","soundFile","handleAddAlarm","find","status","sort","a","b","useEffect","nextAlarms","play","checkAlarm","getAlarmClass","className","maxLength","onChange","target","onKeyDown","key","isNaN","preventDefault","filterNaNfromInput","onWheel","input","deltaY","Math","max","placeholder","onClick","src","plus","newAlarms","handleResetAlarm","refresh","splice","handleClearAlarm","cross","Graph","gasStats","COLORS","RED","YELLOW","GREEN","PURPLE","array","offset","colorArr","style","height","width","position","bottom","left","background","zIndex","credentials","etherscanKey","ethGasStationKey","wallet","api","etherscanApi","init","date","Date","toUTCString","replace","App","configRef","useRef","EGSData","setEGSData","ethPrice","setEthPrice","txGasCost","setTxGasCost","showGraph","setConfig","getEthPrice","stats","ethprice","price","result","ethusd","getEthGasStation","axios","get","KEYS","egsPrice","fastest","fast","average","safeLow","x","prev","current","setInterval","txCost","close","undefined","type","id","checked","pre","ref","onchange","htmlFor","event","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41ca8a81.chunk.js","sourcesContent":["const convWeiToGwei = (wei) => wei / 10 ** 9;\r\n\r\nconst calcAverages = ({ setGasStats, prices }) => {\r\n\tsetGasStats((prevGasStats) => ({\r\n\t\tsums:\r\n\t\t\tprevGasStats.sampleSize === 0\r\n\t\t\t\t? prices.slice(0, 4)\r\n\t\t\t\t: prevGasStats.sums.map((item, index) => Number(item) + Number(prices[index])),\r\n\t\tsampleSize: prevGasStats.sampleSize + 1,\r\n\t\thistory: [...prevGasStats.history].concat([prices.slice(0, 4)]),\r\n\t}));\r\n};\r\n\r\nconst getGas = ({ setGasData, gasData, parseTime, setGasStats, config }) => {\r\n\tlet messageCount = 0;\r\n\r\n\tsetGasData({ ...gasData, rektFlag: \"neutral\" });\r\n\r\n\tconsole.log(`opening websocket`);\r\n\r\n\tconst socket = new WebSocket(\"wss://gasgas.io/prices\");\r\n\r\n\tsocket.onopen = (e) => {\r\n\t\tconsole.log(\"websocket connected\");\r\n\t\tsetGasData({ ...gasData, socket: socket, rektFlag: false });\r\n\t};\r\n\r\n\tsocket.onmessage = (e) => {\r\n\t\tmessageCount++;\r\n\t\tlet prices = Object.values(JSON.parse(e.data).data).map((value, index) => {\r\n\t\t\treturn index === 4 ? parseTime(value) : convWeiToGwei(value).toFixed(1);\r\n\t\t});\r\n\t\tsetGasData({ socket: socket, prices: [...prices, messageCount] });\r\n\t\tcalcAverages({ setGasStats, prices });\r\n\t};\r\n\r\n\tsocket.onclose = (e) => {\r\n\t\tif (e.wasClean) {\r\n\t\t\tconsole.log(`${e.code}: Connection closed cleanly`);\r\n\t\t} else {\r\n\t\t\tconsole.log(`${e.code}: Connection rekt`);\r\n\t\t\tsetGasData({\r\n\t\t\t\t...gasData,\r\n\t\t\t\tprices: [\"R\", \"E\", \"K\", \"T\", \"gasgas.io api rekt\", \"ded\"],\r\n\t\t\t\trektFlag: true,\r\n\t\t\t});\r\n\t\t\tconsole.log({config})\r\n\t\t\tif (config.autoRetry) {\r\n\t\t\t\tconsole.log({ auto: config.autoRetry });\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, config });\r\n\t\t\t\t\tconsole.log(`getting gas`);\r\n\t\t\t\t}, 15000);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tsocket.onerror = (e) => {\r\n\t\tconsole.log({ onerror: e });\r\n\t};\r\n};\r\n\r\nexport default getGas;\r\n","export default __webpack_public_path__ + \"static/media/cross.7ac58f49.svg\";","export default __webpack_public_path__ + \"static/media/plus.0737ce86.svg\";","export default __webpack_public_path__ + \"static/media/refresh.755ed584.svg\";","export default __webpack_public_path__ + \"static/media/asdf.b49a92e1.wav\";","import { useState, useEffect } from \"react\";\r\nimport { cross, refresh, plus } from \"./assets/img\";\r\n\r\nimport soundFile from \"./assets/asdf.wav\";\r\n\r\nimport \"./AlarmBox.css\";\r\n\r\nconst STATUS = {\r\n\tSET: \"set\",\r\n\tRINGING: \"ringing\",\r\n\tSNOOZED: \"snoozed\",\r\n};\r\n\r\nexport const AlarmBox = ({ gasData }) => {\r\n\tconst [alarmInput, setAlarmInput] = useState();\r\n\tconst [alarms, setAlarms] = useState([]);\r\n\r\n\tlet sound = new Audio(soundFile);\r\n\r\n\tconst filterNaNfromInput = (e) => {\r\n\t\tconst allowedKeys = [\r\n\t\t\t\"Backspace\",\r\n\t\t\t\"Delete\",\r\n\t\t\t\"Home\",\r\n\t\t\t\"End\",\r\n\t\t\t\"ArrowUp\",\r\n\t\t\t\"ArrowDown\",\r\n\t\t\t\"ArrowLeft\",\r\n\t\t\t\"ArrowRight\",\r\n\t\t];\r\n\r\n\t\tif (!allowedKeys.find((item) => item === e.key) && isNaN(e.key)) e.preventDefault();\r\n\t};\r\n\r\n\tconst handleAlarmKeyDown = (e) => {\r\n\t\tif (e.key === \"Enter\") handleAddAlarm();\r\n\t\tfilterNaNfromInput(e);\r\n\t};\r\n\r\n\tconst handleAlarmWheel = (e) => {\r\n\t\tlet input = isNaN(alarmInput) ? 0 : alarmInput;\r\n\t\tinput = Number(input) + e.deltaY / -50;\r\n\t\tsetAlarmInput(Math.max(input, 0));\r\n\t};\r\n\r\n\tconst checkAlarm = (alarms) => {\r\n\t\tif (!gasData) return;\r\n\r\n\t\talarms.find((item, index) => {\r\n\t\t\tif (!(Number(item.value) >= gasData.prices[2])) {\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\tif (alarms[index].status !== STATUS.RINGING) {\r\n\t\t\t\t\tlet nextAlarms = [...alarms];\r\n\t\t\t\t\tnextAlarms[index].status = STATUS.RINGING;\r\n\r\n\t\t\t\t\tsetAlarms(nextAlarms);\r\n\t\t\t\t\tsound.play();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst handleAddAlarm = () => {\r\n\t\tif (alarmInput <= 9999 && alarmInput > 0 && !alarms.find((item) => item.value === alarmInput)) {\r\n\t\t\tlet newAlarm = { value: alarmInput, status: STATUS.SET };\r\n\t\t\tsetAlarms([newAlarm, ...alarms].sort((a, b) => b.value - a.value));\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleClearAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms.splice(index, 1);\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tconst handleResetAlarm = (index) => {\r\n\t\tlet newAlarms = [...alarms];\r\n\t\tnewAlarms[index].status = STATUS.SET;\r\n\t\tsetAlarms(newAlarms);\r\n\t};\r\n\tuseEffect(() => {\r\n\t\tcheckAlarm(alarms);\r\n\t}, [gasData]);\r\n\r\n\tconst getAlarmClass = (index) => {\r\n\t\treturn alarms[index].status === STATUS.RINGING ? \"alert\" : \"\";\r\n\t};\r\n\r\n\tconst displayAlarms = () => {\r\n\t\treturn alarms.map((item, index) => (\r\n\t\t\t<div key={index} className={`alarm-box alarm-${index + 1} ${getAlarmClass(index)}`}>\r\n\t\t\t\t<div className=\"alarm-box-text-box\">\r\n\t\t\t\t\t<span>⏰</span>\r\n\t\t\t\t\t<span>{item.value}</span>\r\n\t\t\t\t\t<span>gwei</span>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"small-button-box\">\r\n\t\t\t\t\t{item.status === STATUS.RINGING ? (\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"alarm-clear-button small-button\"\r\n\t\t\t\t\t\t\tonClick={() => handleResetAlarm(index)}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<img src={refresh} />\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\tfalse\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName=\"alarm-reset-button small-button\"\r\n\t\t\t\t\t\tonClick={() => handleClearAlarm(index)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<img src={cross} />\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t));\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"alarm-box-container\">\r\n\t\t\t<div className=\"add-alarm-container\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tclassName=\"add-alarm-input\"\r\n\t\t\t\t\t// type=\"number\"\r\n\t\t\t\t\t// min=\"1\"\r\n\t\t\t\t\t// max=\"9999\"\r\n\t\t\t\t\t// autofocus=\"true\"\r\n\t\t\t\t\tmaxLength=\"4\"\r\n\t\t\t\t\tonChange={(e) => setAlarmInput(e.target.value)}\r\n\t\t\t\t\tonKeyDown={handleAlarmKeyDown}\r\n\t\t\t\t\tonWheel={handleAlarmWheel}\r\n\t\t\t\t\tvalue={alarmInput === 0 ? \"\" : alarmInput}\r\n\t\t\t\t\tplaceholder=\"alarm\"\r\n\t\t\t\t/>\r\n\t\t\t\t<button className=\"add-alarm-button\" placeholder=\"alarm\" onClick={handleAddAlarm}>\r\n\t\t\t\t\t<img src={plus} />\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t{displayAlarms()}\r\n\t\t</div>\r\n\t);\r\n};\r\n","import \"./Graph.css\";\r\n\r\nexport const Graph = ({ gasStats }) => {\r\n\tconst COLORS = {\r\n\t\tRED: \"rgb(247, 26, 0)\",\r\n\t\tYELLOW: \"rgb(255, 237, 48)\",\r\n\t\tGREEN: \"rgb(0, 135, 57)\",\r\n\t\tPURPLE: \"rebeccapurple\",\r\n\t};\r\n\r\n\tconst renderLines = () => {\r\n\t\tlet means = gasStats.sums.map((item, index) => {\r\n\t\t\tlet avg = item / gasStats.sampleSize;\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderBars = () => {\r\n\t\t// console.log({renderbars: gasStats.history});\r\n\t\treturn gasStats.history.map((array, index) => {\r\n\t\t\tlet offset = (index + 1) * 10;\r\n\t\t\t// console.log({array});\r\n\t\t\tconst drawBar = () =>\r\n\t\t\t\tarray.map((item, index) => {\r\n\t\t\t\t\tlet colorArr = Object.values(COLORS);\r\n\t\t\t\t\tlet style = {\r\n\t\t\t\t\t\theight: `${item * 1.3}px`,\r\n\t\t\t\t\t\twidth: \"4px\",\r\n\t\t\t\t\t\tposition: \"absolute\",\r\n\t\t\t\t\t\tbottom: \"5px\",\r\n\t\t\t\t\t\tleft: `${offset + 5}px`,\r\n\t\t\t\t\t\tbackground: `${colorArr[index]}`,\r\n\t\t\t\t\t\tzIndex: `${100 + index}`,\r\n\t\t\t\t\t};\r\n\t\t\t\t\treturn <span style={style}></span>;\r\n\t\t\t\t});\r\n\r\n\t\t\treturn <span>{drawBar()}</span>;\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"graph-container\">\r\n\t\t\t<div className=\"graph-info-box\">\r\n\t\t\t\t<div>ETH Gas Station API</div>\r\n\t\t\t\t{gasStats.prices.map((item, index) => (\r\n\t\t\t\t\t<div>{item}</div>\r\n\t\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t{renderBars()}\r\n\t\t</div>\r\n\t);\r\n};\r\n","const credentials = {\r\n\tetherscanKey: \"UTIYWQDZAPK59ZTCVYFM5VG595HURMGAEH\",\r\n\tethGasStationKey: \"e213ca34bbb5b36cec9d417236fcbbecbab8156633994f116e800f903e0b\",\r\n\twallet: \"0xEB7dC5D228c246E3D87F978AA0c316eE40e9e149\",\r\n};\r\nexport default credentials;\r\n","import { useRef, useState, useEffect } from \"react\";\r\nimport getGas from \"./getGas\";\r\nimport etherscanApi from \"etherscan-api\";\r\nimport axios from \"axios\";\r\n\r\nimport { AlarmBox } from \"./AlarmBox\";\r\nimport { Graph } from \"./Graph\";\r\n\r\nimport KEYS from \"./auth.js\";\r\n\r\nimport \"./App.css\";\r\n\r\nconst api = etherscanApi.init(\"\");\r\n\r\nconst parseTime = (date) => new Date(date).toUTCString().replace(\"GMT\", \"UTC\");\r\n\r\nconst App = () => {\r\n\tconst configRef = useRef();\r\n\tconst [gasData, setGasData] = useState({ prices: [], socket: null, rektFlag: false });\r\n\tconst [gasStats, setGasStats] = useState({ sums: [], sampleSize: 0, history: [] });\r\n\tconst [EGSData, setEGSData] = useState({\r\n\t\tprices: [],\r\n\t\tsums: [0, 0, 0, 0],\r\n\t\tsampleSize: 0,\r\n\t\thistory: [],\r\n\t});\r\n\tconst [ethPrice, setEthPrice] = useState();\r\n\tconst [txGasCost, setTxGasCost] = useState(21000);\r\n\tconst [config, setConfig] = useState({ autoRetry: false, showGraph: true });\r\n\r\n\tconst getEthPrice = async () => {\r\n\t\tlet price = await api.stats.ethprice();\r\n\t\tsetEthPrice(price.result.ethusd);\r\n\t};\r\n\r\n\tconst getEthGasStation = async () => {\r\n\t\tlet egsPrice = await axios.get(\r\n\t\t\t`https://ethgasstation.info/api/ethgasAPI.json?api-key=${KEYS.ethGasStationKey}`\r\n\t\t);\r\n\t\tlet prices = [\r\n\t\t\tegsPrice.data.fastest,\r\n\t\t\tegsPrice.data.fast,\r\n\t\t\tegsPrice.data.average,\r\n\t\t\tegsPrice.data.safeLow,\r\n\t\t].map((x) => x / 10);\r\n\t\tsetEGSData((prev) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prev,\r\n\t\t\t\tsampleSize: prev.sampleSize + 1,\r\n\t\t\t\tprices: prices,\r\n\t\t\t\tsums: prev.sums.map((item, index) => item + prices[index]),\r\n\t\t\t\thistory: prev.history.concat([prices]),\r\n\t\t\t};\r\n\t\t});\r\n\t\tconsole.log({ egsPrice });\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, config: configRef });\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tconfigRef.current = config;\r\n\t\t// \tconsole.log(\"CONFIG IS CHANGED TO\" + config);\r\n\t}, [config]);\r\n\r\n\tconst ethPriceOracle = () => {\r\n\t\tgetEthPrice();\r\n\t\tgetEthGasStation();\r\n\r\n\t\tsetInterval(() => getEthGasStation(), 10000);\r\n\r\n\t\tsetInterval(async () => {\r\n\t\t\tawait getEthPrice();\r\n\t\t}, 15000);\r\n\t};\r\n\r\n\tuseEffect(() => ethPriceOracle(), []);\r\n\r\n\tconst gasStartStop = () => {\r\n\t\tif (gasData.socket) {\r\n\t\t\tgasData.socket.close();\r\n\t\t\tconsole.log(\"killed connection\");\r\n\t\t\tsetGasData({ ...gasData, socket: undefined });\r\n\t\t} else {\r\n\t\t\tconsole.log(\"reconnecting...\");\r\n\t\t\tgetGas({ setGasData, gasData, parseTime, setGasStats, gasStats, config: configRef });\r\n\t\t}\r\n\t};\r\n\r\n\tconst handleTxTypeInput = (event) => {\r\n\t\tsetTxGasCost(event.target.value);\r\n\t};\r\n\r\n\tconst renderPriceBoxes = () => {\r\n\t\treturn [\"rapid\", \"fast\", \"standard\", \"slow\"].map((item, index) => {\r\n\t\t\tlet txCost = ((ethPrice * gasData.prices[index] * txGasCost) / 10 ** 9).toFixed(2);\r\n\t\t\treturn (\r\n\t\t\t\t<div className={`price-box ${item}`}>\r\n\t\t\t\t\t{item}:<div className=\"price\">{gasData.prices[index]}</div>\r\n\t\t\t\t\t{isNaN(txCost) ? false : <span className=\"tx-cost\">(${txCost})</span>}\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"app\">\r\n\t\t\t<div className=\"gas-widget\">\r\n\t\t\t\t<div className=\"gas-frame-container\">\r\n\t\t\t\t\t<div className=\"gas-frame\">\r\n\t\t\t\t\t\t{renderPriceBoxes()}\r\n\t\t\t\t\t\t<div className=\"timestamp\">\r\n\t\t\t\t\t\t\t<span>last update:</span>\r\n\t\t\t\t\t\t\t<span>{gasData.prices[4]}</span>\r\n\t\t\t\t\t\t\t<span> (update count: {gasData.prices[5]})</span>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"eth-price-container\">\r\n\t\t\t\t\t\t\tETH: {ethPrice ? \"$\" + ethPrice : \"disable adblock\"}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"kill-button-container\">\r\n\t\t\t\t\t\t\t<button className=\"kill-button\" onClick={() => gasStartStop()}>\r\n\t\t\t\t\t\t\t\t{gasData.rektFlag === \"neutral\"\r\n\t\t\t\t\t\t\t\t\t? \"Connecting...\"\r\n\t\t\t\t\t\t\t\t\t: gasData.socket\r\n\t\t\t\t\t\t\t\t\t? \"KILL\"\r\n\t\t\t\t\t\t\t\t\t: gasData.rektFlag\r\n\t\t\t\t\t\t\t\t\t? \"Retry\"\r\n\t\t\t\t\t\t\t\t\t: \"Connect\"}\r\n\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t{gasData.rektFlag === true ? (\r\n\t\t\t\t\t\t\t\t<span className=\"autoconnect-checkbox\">\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\t\t\t\t\tid=\"autoconnect\"\r\n\t\t\t\t\t\t\t\t\t\tchecked={config.autoRetry}\r\n\t\t\t\t\t\t\t\t\t\t// onChange={(e) =>{\r\n\t\t\t\t\t\t\t\t\t\t// \tconsole.log(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t// \tsetConfig({ ...config, autoRetry: e.target.value })}\r\n\t\t\t\t\t\t\t\t\t\t// }\r\n\t\t\t\t\t\t\t\t\t\tonChange={() => {\r\n\t\t\t\t\t\t\t\t\t\t\tsetConfig((pre) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"CONFIG IS CHANGED TO \", {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tref: configRef.current,\r\n\t\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\t\t// if (!pre.autoRetry) gasStartStop();\r\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log({ onchange: pre.autoRetry });\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn { ...pre, autoRetry: !pre.autoRetry };\r\n\t\t\t\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t\t\t\t\tconfigRef.current = config;\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<label> auto?</label>\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t<div className=\"tx-select\">\r\n\t\t\t\t\t\t\t<label htmlFor=\"gasCostInput\">tx type: </label>\r\n\t\t\t\t\t\t\t<select id=\"gasCostInput\" onChange={handleTxTypeInput}>\r\n\t\t\t\t\t\t\t\t<option value={21000}>send ETH</option>\r\n\t\t\t\t\t\t\t\t<option value={65000}>send ERC20</option>\r\n\t\t\t\t\t\t\t\t<option value={175000}>LP</option>\r\n\t\t\t\t\t\t\t\t<option value={200000}>SWAP</option>\r\n\t\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<AlarmBox gasData={gasData} />\r\n\t\t\t</div>\r\n\t\t\t{config.showGraph ? <Graph gasStats={EGSData} /> : null}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n);\n"],"sourceRoot":""}